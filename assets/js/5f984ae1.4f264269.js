(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[930],{1845:(e,n,s)=>{"use strict";s.r(n),s.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>p});var t=s(1085),i=s(1184),a=s(1983),r=s(6773),l=s.n(r);const c={},d="Mask",o={id:"plugins/mask",title:"Mask",description:"The d-mask directive allows you to apply input masks, ensuring consistent formatting for fields like phone numbers, credit cards, and currency inputs.",source:"@site/docs/plugins/mask.mdx",sourceDirName:"plugins",slug:"/plugins/mask",permalink:"/domy/docs/plugins/mask",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Intersect",permalink:"/domy/docs/plugins/intersect"},next:{title:"Router",permalink:"/domy/docs/plugins/router"}},u={},p=[{value:"Installation",id:"installation",level:2},{value:"Syntax and Usage",id:"syntax-and-usage",level:2},{value:"<strong>Basic Mask Usage (Static)</strong>",id:"basic-mask-usage-static",level:3},{value:"<strong>Dynamic Mask Usage</strong>",id:"dynamic-mask-usage",level:3},{value:"<strong>Money Formatting Helper (<code>$money</code>)</strong>",id:"money-formatting-helper-money",level:3},{value:"Example: Full Mask Implementation",id:"example-full-mask-implementation",level:2}];function m(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"mask",children:"Mask"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"d-mask"})," directive allows you to ",(0,t.jsx)(n.strong,{children:"apply input masks"}),", ensuring consistent formatting for fields like phone numbers, credit cards, and currency inputs."]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(n.p,{children:["To use ",(0,t.jsx)(n.code,{children:"d-mask"}),", include the DOMY Mask plugin via CDN:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<script src="https://unpkg.com/@domyjs/mask@1.x.x"><\/script>\n'})}),"\n",(0,t.jsx)(n.p,{children:"And then:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"DOMY.createApp().plugins([mask]).mount();\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"syntax-and-usage",children:"Syntax and Usage"}),"\n",(0,t.jsx)(n.h3,{id:"basic-mask-usage-static",children:(0,t.jsx)(n.strong,{children:"Basic Mask Usage (Static)"})}),"\n",(0,t.jsx)(n.p,{children:"Use a predefined mask structure."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<input type="text" d-mask="99/99/9999" placeholder="DD/MM/YYYY" />\n'})}),"\n",(0,t.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,t.jsx)(n.strong,{children:"Mask Rules:"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"9"})," \u2192 Number (0-9)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"a"})," \u2192 Letter (A-Z or a-z)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"*"})," \u2192 Any character"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"dynamic-mask-usage",children:(0,t.jsx)(n.strong,{children:"Dynamic Mask Usage"})}),"\n",(0,t.jsxs)(n.p,{children:["Define a ",(0,t.jsx)(n.strong,{children:"mask dynamically"})," based on user input."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<input type="text" d-mask.dynamic="maskType" placeholder="Dynamic mask applied" />\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const maskType = input => {\n  return input.includes('@') ? 'a*@a*' : '999-999-9999';\n};\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"money-formatting-helper-money",children:(0,t.jsxs)(n.strong,{children:["Money Formatting Helper (",(0,t.jsx)(n.code,{children:"$money"}),")"]})}),"\n",(0,t.jsx)(n.p,{children:"Format currency inputs dynamically."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<input type="text" d-mask.dynamic="$money" placeholder="$0.00" />\n'})}),"\n",(0,t.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,t.jsx)(n.strong,{children:"Usage Options"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"$money(input, decimalSeparator = '.', thousandsSeparator = ',', precision = 2)"})}),"\n",(0,t.jsx)(n.li,{children:"Ensures consistent money formatting with thousands and decimals."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"example-full-mask-implementation",children:"Example: Full Mask Implementation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<div>\n  <p>Phone</p>\n  <input type="text" d-mask="999-999-9999" />\n\n  <p>Price</p>\n  <input type="text" d-mask.dynamic="$money" placeholder="$0.00" />\n</div>\n'})}),"\n",(0,t.jsx)(a.A,{code:'\n<div>\n<p>Phone</p>\n<input type="text" d-mask="999-999-9999" />\n\n<p>Price</p>\n<input type="text" d-mask.dynamic="$money" placeholder="$0.00" />\n</div>\n',plugins:()=>[l()]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},6773:function(e){e.exports=function(){"use strict";const e={9:/\d/,a:/[a-zA-Z]/,"*":/./};function n(n,s){let t="",i=0;for(let a=0;a<s.length;a++){const r=s[a],l=n[i];if(!l)break;e[r]?e[r].test(l)?(t+=l,i++):(i++,a--):(t+=r,l===r&&i++)}return t}function s(){return function(e,n=".",s,t=2){if("-"===e)return"-";if(/^\D+$/.test(e))return"9";null==s&&(s=","===n?".":",");const i=e.startsWith("-")?"-":"",a=e.replace(new RegExp(`[^0-9\\${n}]`,"g"),""),[r]=a.split(n);let l=i+((e,n)=>{let s="",t=0;for(let i=e.length-1;i>=0;i--)e[i]!==n&&(3===t?(s=e[i]+n+s,t=0):s=e[i]+s,t++);return s})("9".repeat(r.length),s);return t>0&&e.includes(n)&&(l+=n+"9".repeat(t)),l}}function t(e,n,s,t){const i=t+(s.length-n.length);e.setSelectionRange(i,i)}function i(e){return e.modifiers.includes("dynamic")?function(e){const s=e.evaluate(e.attr.value),i=e.block.el,a=e=>"function"==typeof s?s(e):s,r=()=>{var e;const s=i.value,r=null!==(e=i.selectionStart)&&void 0!==e?e:s.length,l=a(s);if(!l||"string"!=typeof l)return;const c=n(s,l);c!==s&&(i.value=c,t(i,s,c,r))},l=()=>{const e=i.value,s=a(e);s&&"string"==typeof s&&(i.value=n(e,s))};i.addEventListener("input",r),i.addEventListener("blur",l),e.cleanup((()=>{i.removeEventListener("input",r),i.removeEventListener("blur",l)}))}(e):function(e){const s=e.attr.value;if(!s)return;const i=e.block.el,a=()=>{var e;const a=i.value,r=null!==(e=i.selectionStart)&&void 0!==e?e:a.length,l=n(a,s);l!==a&&(i.value=l,t(i,a,l,r))},r=()=>{i.value=n(i.value,s)};i.addEventListener("input",a),i.addEventListener("blur",r),e.cleanup((()=>{i.removeEventListener("input",a),i.removeEventListener("blur",r)}))}(e)}return function(e){e.helper("money",s),e.directive("mask",i),e.directive("mask:dynamic",i)}}()}}]);