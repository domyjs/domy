"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8805],{8898:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>h});var l=s(1085),t=s(1184),i=s(1983);const o={},r="useChildrens",c={id:"hooks/useChildrens",title:"useChildrens",description:"The useChildrens hook allows a component to access the elements passed inside its tag. This is useful for handling slots or dynamically rendering child elements within a component.",source:"@site/docs/hooks/useChildrens.mdx",sourceDirName:"hooks",slug:"/hooks/useChildrens",permalink:"/domy/docs/hooks/useChildrens",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useAttrs",permalink:"/domy/docs/hooks/useAttrs"},next:{title:"useConfig",permalink:"/domy/docs/hooks/useConfig"}},d={},h=[{value:"Syntax",id:"syntax",level:2},{value:"Example",id:"example",level:2},{value:"Injecting Child Elements",id:"injecting-child-elements",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"usechildrens",children:"useChildrens"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"useChildrens"})," hook allows a component to access the elements passed inside its tag. This is useful for handling slots or dynamically rendering child elements within a component."]}),"\n",(0,l.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",children:"<ErrorMessage>\n  <p>Hello</p>\n</ErrorMessage>\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Inside ",(0,l.jsx)(n.code,{children:"ErrorMessage"}),", ",(0,l.jsx)(n.code,{children:"useChildrens()"})," will return:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"const childrens = useChildrens();\nconsole.log(childrens); // [<p>Hello</p>]\n"})}),"\n",(0,l.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,l.jsx)(n.h3,{id:"injecting-child-elements",children:"Injecting Child Elements"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",children:"<component>\n  <p>This element is injected into the component.</p>\n</component>\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'const { useChildrens } = DOMY;\n\nconst Component = DOMY.createComponent({\n  html: `<template d-insert="childrens[0]"></template>`,\n  app: () => {\n    const childrens = useChildrens();\n    return {\n      childrens\n    };\n  }\n});\n'})}),"\n",(0,l.jsx)(i.A,{code:"\n<component>\n  <p>This element is injected into the component.</p>\n</component>\n",components:()=>{const{useChildrens:e}=DOMY;return{Component:DOMY.createComponent({html:'<template d-insert="childrens[0]"></template>',app:()=>({childrens:e()})})}}})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}}}]);