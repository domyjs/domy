"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9976],{3159:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var o=e(1085),s=e(1184),c=e(1983);const r={},a="Store",i={id:"essentials/store",title:"Store",description:"A store in DOMY is a shared reactive state that multiple components can access. It allows for state management across different parts of an application.",source:"@site/docs/essentials/store.mdx",sourceDirName:"essentials",slug:"/essentials/store",permalink:"/domy/docs/essentials/store",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Reactivity",permalink:"/domy/docs/essentials/reactivity"},next:{title:"Hooks",permalink:"/domy/docs/category/hooks"}},u={},l=[{value:"Defining a Store",id:"defining-a-store",level:2},{value:"Example",id:"example",level:2}];function d(n){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"store",children:"Store"}),"\n",(0,o.jsxs)(t.p,{children:["A ",(0,o.jsx)(t.strong,{children:"store"})," in DOMY is a shared reactive state that multiple components can access. It allows for ",(0,o.jsx)(t.strong,{children:"state management"})," across different parts of an application."]}),"\n",(0,o.jsx)(t.h2,{id:"defining-a-store",children:"Defining a Store"}),"\n",(0,o.jsxs)(t.p,{children:["To create a store, use the ",(0,o.jsx)(t.code,{children:"signal"})," function inside your hook. Then you just need to instancify your hook ",(0,o.jsx)(t.code,{children:"globaly"})," instead of being declared into DOMY instance."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"const { signal } = DOMY;\n\nfunction useCount() {\n  const count = signal(0);\n  return { count };\n}\n\nconst counterStore = useCount();\n\nDOMY.createApp(() => {\n  // ...\n}).mount();\n"})}),"\n",(0,o.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-html",children:"<count></count> <br />\n<count></count>\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:'const { signal } = DOMY;\n\nfunction useCount() {\n  const count = signal(0);\n  return { count };\n}\n\nconst counterStore = useCount();\n\nconst Count = DOMY.createComponent({\n  html: `\n    <div>\n      <p>{{ count }}</p>\n      <button @click="count++">+</button>\n      <button @click="count--">-</button>\n    </div>\n  `,\n  app: () => {\n    return { count: counterStore.count };\n  }\n});\n\nDOMY.createApp().components({ Count }).mount();\n'})}),"\n",(0,o.jsx)(c.A,{code:"\n<count></count> <br />\n<count></count>\n",components:()=>{const{signal:n}=DOMY;const t={count:n(0)};return{Count:DOMY.createComponent({html:'     <div>\n    <p>{{ count }}</p>\n    <button @click="count++">+</button>\n    <button @click="count--">-</button>\n  </div>\n',app:()=>({count:t.count})})}}})]})}function p(n={}){const{wrapper:t}={...(0,s.R)(),...n.components};return t?(0,o.jsx)(t,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}}}]);