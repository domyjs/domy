"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9976],{9490:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"essentials/store","title":"Store","description":"A store in DOMY is a shared reactive state that multiple components can access. It allows for state management across different parts of an application.","source":"@site/docs/essentials/store.mdx","sourceDirName":"essentials","slug":"/essentials/store","permalink":"/domy/docs/essentials/store","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Reactivity","permalink":"/domy/docs/essentials/reactivity"},"next":{"title":"Hooks","permalink":"/domy/docs/category/hooks"}}');var s=t(1085),c=t(1184),r=t(1983);const a={},i="Store",u={},l=[{value:"Defining a Store",id:"defining-a-store",level:2},{value:"Example",id:"example",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"store",children:"Store"})}),"\n",(0,s.jsxs)(e.p,{children:["A ",(0,s.jsx)(e.strong,{children:"store"})," in DOMY is a shared reactive state that multiple components can access. It allows for ",(0,s.jsx)(e.strong,{children:"state management"})," across different parts of an application."]}),"\n",(0,s.jsx)(e.h2,{id:"defining-a-store",children:"Defining a Store"}),"\n",(0,s.jsxs)(e.p,{children:["To create a store, use the ",(0,s.jsx)(e.code,{children:"signal"})," function inside your hook. Then you just need to instancify your hook ",(0,s.jsx)(e.code,{children:"globaly"})," instead of being declared into DOMY instance."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const { signal } = DOMY;\n\nfunction useCount() {\n  const count = signal(0);\n  return { count };\n}\n\nconst counterStore = useCount();\n\nDOMY.createApp(() => {\n  // ...\n}).mount();\n"})}),"\n",(0,s.jsx)(e.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-html",children:"<count></count> <br />\n<count></count>\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:'const { signal } = DOMY;\n\nfunction useCount() {\n  const count = signal(0);\n  return { count };\n}\n\nconst counterStore = useCount();\n\nconst Count = DOMY.createComponent({\n  html: `\n    <div>\n      <p>{{ count }}</p>\n      <button @click="count++">+</button>\n      <button @click="count--">-</button>\n    </div>\n  `,\n  app: () => {\n    return { count: counterStore.count };\n  }\n});\n\nDOMY.createApp().components({ Count }).mount();\n'})}),"\n",(0,s.jsx)(r.A,{code:"\n<count></count> <br />\n<count></count>\n",components:()=>{const{signal:n}=DOMY;const e={count:n(0)};return{Count:DOMY.createComponent({html:'     <div>\n    <p>{{ count }}</p>\n    <button @click="count++">+</button>\n    <button @click="count--">-</button>\n  </div>\n',app:()=>({count:e.count})})}}})]})}function p(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}}}]);