"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7246],{6072:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>p,metadata:()=>l,toc:()=>a});var o=n(1085),t=n(1184),i=n(1983);const p={},r="useProps",l={id:"hooks/useProps",title:"useProps",description:"The useProps hook allows a component to access the properties passed to it by its parent. This is useful for managing dynamic data within components.",source:"@site/docs/hooks/useProps.mdx",sourceDirName:"hooks",slug:"/hooks/useProps",permalink:"/domy/docs/hooks/useProps",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useNames",permalink:"/domy/docs/hooks/useNames"},next:{title:"useRefs",permalink:"/domy/docs/hooks/useRefs"}},c={},a=[{value:"Syntax",id:"syntax",level:2},{value:"Example",id:"example",level:2},{value:"Using Props in a Component",id:"using-props-in-a-component",level:3}];function d(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.h1,{id:"useprops",children:"useProps"}),"\n",(0,o.jsxs)(s.p,{children:["The ",(0,o.jsx)(s.code,{children:"useProps"})," hook allows a component to access the properties passed to it by its parent. This is useful for managing dynamic data within components."]}),"\n",(0,o.jsx)(s.h2,{id:"syntax",children:"Syntax"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-html",children:'<component :title="\'Dynamic Title\'" :visible="true">\n  <p>This element receives props.</p>\n</component>\n'})}),"\n",(0,o.jsxs)(s.p,{children:["Inside the component, ",(0,o.jsx)(s.code,{children:"useProps()"})," will return:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:'const props = useProps();\nconsole.log(props.title); // "Dynamic Title"\nconsole.log(props.visible); // true\n'})}),"\n",(0,o.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(s.h3,{id:"using-props-in-a-component",children:"Using Props in a Component"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-html",children:'<component :title="\'Dynamic Title\'" :visible="true">\n  <p>This element receives props.</p>\n</component>\n'})}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:"const { useProps } = DOMY;\n\nconst Component = DOMY.createComponent({\n  props: ['!title', 'visible'],\n  html: `\n    <div>\n        <h1 d-text=\"props.title\"></h1>\n        <p d-if=\"props.visible\">This is conditionally rendered based on props.</p>\n    </div>\n  `,\n  app: () => {\n    const props = useProps();\n    return {\n      props\n    };\n  }\n});\n"})}),"\n",(0,o.jsx)(i.A,{code:'\n<component :title="\'Dynamic Title\'" :visible="true">\n  <p>This element receives props.</p>\n</component>\n',components:()=>{const{useProps:e}=DOMY;return{Component:DOMY.createComponent({props:["!title","visible"],html:'\n      <div>\n          <h1 d-text="props.title"></h1>\n          <p d-if="props.visible">This is conditionally rendered based on props.</p>\n      </div>\n    ',app:()=>({props:e()})})}}})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);