"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2219],{445:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var t=i(1085),s=i(1184),d=i(1983);const a={},o="d-transition",r={id:"directives/d-transition",title:"d-transition",description:"The d-transition directive allows you to define a transition name for an element, making it easy to animate components when they appear and disappear. It works seamlessly with directives such as d-show, d-if, d-else-if, d-else, and d-insert.",source:"@site/docs/directives/d-transition.mdx",sourceDirName:"directives",slug:"/directives/d-transition",permalink:"/domy/docs/directives/d-transition",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"d-text",permalink:"/domy/docs/directives/d-text"},next:{title:"d-unmount",permalink:"/domy/docs/directives/d-unmount"}},c={},l=[{value:"Syntax",id:"syntax",level:2},{value:"Behavior",id:"behavior",level:2},{value:"Modifiers",id:"modifiers",level:2},{value:"Example",id:"example",level:4},{value:"Example",id:"example-1",level:4}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"d-transition",children:"d-transition"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"d-transition"})," directive allows you to define a transition name for an element, making it easy to animate components when they appear and disappear. It works seamlessly with directives such as ",(0,t.jsx)(n.code,{children:"d-show"}),", ",(0,t.jsx)(n.code,{children:"d-if"}),", ",(0,t.jsx)(n.code,{children:"d-else-if"}),", ",(0,t.jsx)(n.code,{children:"d-else"}),", and ",(0,t.jsx)(n.code,{children:"d-insert"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-css",children:".fade-enter {\n  transition: all 0.3s ease;\n  opacity: 0;\n}\n\n.fade-enter-to {\n  opacity: 1;\n}\n\n.fade-out {\n  transition: all 0.3s ease;\n  opacity: 1;\n}\n\n.fade-out-to {\n  opacity: 0;\n}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<div d-transition="fade" d-if="isVisible">Fading content</div>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["When ",(0,t.jsx)(n.code,{children:"isVisible"})," changes, the element enters with the ",(0,t.jsx)(n.code,{children:"fade-enter"})," + ",(0,t.jsx)(n.code,{children:"fade-enter-to"})," class and exits with ",(0,t.jsx)(n.code,{children:"fade-out"})," + ",(0,t.jsx)(n.code,{children:"fade-out-to"}),"."]}),"\n",(0,t.jsx)(d.A,{code:'\n<style>\n  .fade-enter {\n    transition: all 0.3s ease;\n    opacity: 0;\n  }\n\n  .fade-enter-to {\n    opacity: 1;\n  }\n\n  .fade-out {\n    transition: all 0.3s ease;\n    opacity: 1;\n  }\n\n  .fade-out-to {\n    opacity: 0;\n  }\n\n</style>\n<div d-scope="{isVisible: true}">\n<button @click="isVisible = !isVisible">Toggle</button>\n<div d-transition="fade" d-if="isVisible">Fading content</div>\n</div>\n'}),"\n",(0,t.jsx)(n.h2,{id:"behavior",children:"Behavior"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"d-transition"})," directive applies ",(0,t.jsx)(n.code,{children:"-enter"})," and ",(0,t.jsx)(n.code,{children:"-out"})," classes based on the provided transition name."]}),"\n",(0,t.jsxs)(n.li,{children:["After the ",(0,t.jsx)(n.code,{children:"-enter"})," or ",(0,t.jsx)(n.code,{children:"-out"})," class is applied the directive wait for the DOM to repaint before adding ",(0,t.jsx)(n.code,{children:"-enter-to"})," or ",(0,t.jsx)(n.code,{children:"-out-to"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"If the transition name is updated dynamically, it will reactively adjust."}),"\n",(0,t.jsx)(n.li,{children:"Works well with elements that appear/disappear based on conditions."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"modifiers",children:"Modifiers"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:".dynamic"}),": modifier allows transitions to be dynamically updated based on a reactive expression."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<div d-scope="{transitionName: \'fade\'}">\n  <div d-transition.dynamic="transitionName" d-if="isVisible">Animated content</div>\n  <button @click="transitionName = \'slide\'">Change transition</button>\n</div>\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:".init"}),": modifier ensures that the transition is applied during the initial render."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<div d-transition.init="fade">This element has an initial transition</div>\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1184:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(4041);const s={},d=t.createContext(s);function a(e){const n=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(d.Provider,{value:n},e.children)}},1983:(e,n,i)=>{i.d(n,{A:()=>a});var t=i(4041);const s="demo_TaPm";var d=i(1085);const a=({code:e,domy:n,components:a,config:o,plugins:r})=>{const c=(0,t.useRef)(null),[l,h]=(0,t.useState)(!1);return(0,t.useEffect)((()=>{let t=!0;h(!0);return(async()=>{try{if(!c.current||"undefined"==typeof window)return;const{default:t}=await i.e(5228).then(i.t.bind(i,2847,23));window.DOMY||(window.DOMY=t),console.log("DOMY"),c.current.innerHTML=e;const s=r?await r():[];t.createApp(n).configure(o??{}).plugins(s).components(a?.()).mount(c.current)}catch(t){console.error("[Demo] Load error:",t)}})(),()=>{t=!1}}),[l]),l?(0,d.jsx)("div",{className:s,ref:c}):(0,d.jsx)("div",{className:s,children:"Loading..."})}}}]);