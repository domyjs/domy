"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7408],{1184:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>i});var t=s(4041);const r={},o=t.createContext(r);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(o.Provider,{value:n},e.children)}},1983:(e,n,s)=>{s.d(n,{A:()=>c});var t=s(4041);const r="demo_TaPm";var o=s(1085);const c=({code:e,domy:n,components:c,config:i,plugins:l})=>{const a=(0,t.useRef)(null),[d,u]=(0,t.useState)(!1);return(0,t.useEffect)((()=>{let t=!0;u(!0);return(async()=>{try{if(!a.current||"undefined"==typeof window)return;const{default:t}=await s.e(5228).then(s.t.bind(s,2847,23));window.DOMY||(window.DOMY=t),console.log("DOMY"),a.current.innerHTML=e;const r=l?await l():[];t.createApp(n).configure(i??{}).plugins(r).components(c?.()).mount(a.current)}catch(t){console.error("[Demo] Load error:",t)}})(),()=>{t=!1}}),[d]),d?(0,o.jsx)("div",{className:r,ref:a}):(0,o.jsx)("div",{className:r,children:"Loading..."})}},5437:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>f,frontMatter:()=>c,metadata:()=>l,toc:()=>d});var t=s(1085),r=s(1184),o=s(1983);const c={},i="useRefs",l={id:"hooks/useRefs",title:"useRefs",description:"The useRefs hook allows components to access registered reference elements within a component. This is useful for interacting directly with elements assigned a d-ref identifier.",source:"@site/docs/hooks/useRefs.mdx",sourceDirName:"hooks",slug:"/hooks/useRefs",permalink:"/docs/hooks/useRefs",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useProps",permalink:"/docs/hooks/useProps"},next:{title:"Directives",permalink:"/docs/category/directives"}},a={},d=[{value:"Syntax",id:"syntax",level:2},{value:"Example",id:"example",level:2},{value:"Accessing and Interacting with Reference Elements",id:"accessing-and-interacting-with-reference-elements",level:3}];function u(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"userefs",children:"useRefs"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"useRefs"})," hook allows components to access registered reference elements within a component. This is useful for interacting directly with elements assigned a ",(0,t.jsx)(n.code,{children:"d-ref"})," identifier."]}),"\n",(0,t.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<p d-ref="text">Hello!</p>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Inside the component, ",(0,t.jsx)(n.code,{children:"useRefs()"})," will return:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const refs = useRefs();\nconsole.log(refs.text.textContent); // "Hello!"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.h3,{id:"accessing-and-interacting-with-reference-elements",children:"Accessing and Interacting with Reference Elements"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<div>\n  <input d-ref="inputBox" type="text" placeholder="Type here..." />\n  <button @click="refs.inputBox.focus()">Focus Input</button>\n</div>\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const { useRefs } = DOMY;\nDOMY.createApp(() => {\n  const refs = useRefs();\n  return {\n    refs\n  };\n}).mount();\n"})}),"\n",(0,t.jsx)(o.A,{code:'\n<div>\n  <input d-ref="inputBox" type="text" placeholder="Type here..." />\n  <button @click="refs.inputBox.focus()">Focus Input</button>\n</div>\n',domy:()=>{const{useRefs:e}=DOMY;return{refs:e()}}})]})}function f(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);