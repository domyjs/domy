"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3211],{6507:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>d,metadata:()=>l,toc:()=>a});var i=t(1085),s=t(1184),r=t(1983);const d={},c="d-insert",l={id:"directives/d-insert",title:"d-insert",description:"The d-insert directive in DOMY allows you to replace a `` element with a dynamically created DOM element. It is reactive, so whenever the expression changes, the inserted element updates accordingly.",source:"@site/docs/directives/d-insert.mdx",sourceDirName:"directives",slug:"/directives/d-insert",permalink:"/domy/docs/directives/d-insert",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"d-ignore",permalink:"/domy/docs/directives/d-ignore"},next:{title:"d-model",permalink:"/domy/docs/directives/d-model"}},o={},a=[{value:"Syntax",id:"syntax",level:2},{value:"Modifiers",id:"modifiers",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"d-insert",children:"d-insert"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"d-insert"})," directive in DOMY allows you to ",(0,i.jsxs)(n.strong,{children:["replace a ",(0,i.jsx)(n.code,{children:"<template>"})," element with a dynamically created DOM element"]}),". It is reactive, so whenever the expression changes, the inserted element updates accordingly."]}),"\n",(0,i.jsx)(n.p,{children:"This directive is used to insert or swap elements in the DOM while keeping track of their position for smooth updates and transitions."}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<template d-insert="expression"></template>\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The expression must return a single DOM element."}),"\n",(0,i.jsxs)(n.li,{children:["The directive only works on ",(0,i.jsx)(n.code,{children:"<template>"})," elements."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"modifiers",children:"Modifiers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"render"}),": When this modifier is present, DOMY will perform a deep render of the inserted element, enabling reactive bindings inside it."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"<div\n  d-scope=\"{ count: 5, createP: () => {\n  const p = document.createElement('p');\n  p.textContent = 'Count: {{ count }}';\n  return p;\n}}\"\n>\n  <template d-insert.render=\"createP()\"></template>\n</div>\n"})}),"\n",(0,i.jsx)(n.p,{children:"Will give:"}),"\n",(0,i.jsx)(r.A,{code:"\n  <div\n  d-scope=\"{ count: 5, createP: () => {\n  const p = document.createElement('p');\n  p.textContent = 'Count: {{ count }}';\n  return p;\n  }}\"\n  >\n  <template d-insert.render=\"createP()\"></template>\n  </div>\n"})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);