"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8811],{6943:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"directives/d-model","title":"d-model","description":"The d-model directive in DOMY provides two-way data binding for form elements such as `, , and `.","source":"@site/docs/directives/d-model.mdx","sourceDirName":"directives","slug":"/directives/d-model","permalink":"/domy/docs/directives/d-model","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"d-insert","permalink":"/domy/docs/directives/d-insert"},"next":{"title":"d-mounted","permalink":"/domy/docs/directives/d-mounted"}}');var s=t(1085),i=t(1184),l=t(1983);const o={},r="d-model",a={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Modifiers",id:"modifiers",level:2},{value:"Example",id:"example",level:2}];function p(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"d-model",children:"d-model"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"d-model"})," directive in DOMY provides ",(0,s.jsx)(n.strong,{children:"two-way data binding"})," for form elements such as ",(0,s.jsx)(n.code,{children:"<input>"}),", ",(0,s.jsx)(n.code,{children:"<textarea>"}),", and ",(0,s.jsx)(n.code,{children:"<select>"}),".",(0,s.jsx)(n.br,{}),"\n","It automatically keeps the element\u2019s value in sync with the state and updates the state when the user changes the input."]}),"\n",(0,s.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<input type="text" d-model="myValue" />\n<select d-model="selectedItems" multiple></select>\n<input type="checkbox" d-model="isChecked" />\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The expression should point to the state property to bind to."}),"\n",(0,s.jsx)(n.li,{children:"Supports various input types including text, number, checkbox, radio, and select (single or multiple)."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"modifiers",children:"Modifiers"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"lazy"}),": Updates the state only on the ",(0,s.jsx)(n.code,{children:"change"})," event instead of on every input event."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<input type="text" d-model.lazy="username" />\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"number"}),": Tell the value of the input is a number."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<div\n  d-scope="{ \n  username: \'John\', \n  isChecked: true, \n  selectedItems: [\'apple\', \'banana\'] \n}"\n>\n  <input type="text" d-model="username" /><br />\n  <input type="checkbox" d-model="isChecked" /><br />\n  <select d-model="selectedItems" multiple>\n    <option value="apple">Apple</option>\n    <option value="banana">Banana</option>\n    <option value="orange">Orange</option>\n  </select>\n</div>\n'})}),"\n",(0,s.jsx)(n.p,{children:"Will give:"}),"\n",(0,s.jsx)(l.A,{code:'\n  <div d-scope="{ \n    username: \'John\', \n    isChecked: true, \n    selectedItems: [\'apple\', \'banana\'] \n  }">\n    <input type="text" d-model="username" /><br />\n    <input type="checkbox" d-model="isChecked" /><br />\n    <select d-model="selectedItems" multiple>\n      <option value="apple">Apple</option>\n      <option value="banana">Banana</option>\n      <option value="orange">Orange</option>\n    </select>\n  </div>\n'})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);