"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6385],{1184:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>l});var o=t(4041);const s={},c=o.createContext(s);function r(n){const e=o.useContext(c);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),o.createElement(c.Provider,{value:e},n.children)}},1983:(n,e,t)=>{t.d(e,{A:()=>r});var o=t(4041);const s="demo_TaPm";var c=t(1085);const r=({code:n,domy:e,components:r,config:l,plugins:i})=>{const a=(0,o.useRef)(null),[p,d]=(0,o.useState)(!1);return(0,o.useEffect)((()=>{let o=!0;d(!0);return(async()=>{try{if(!a.current||"undefined"==typeof window)return;const{default:o}=await t.e(5228).then(t.t.bind(t,2847,23));window.DOMY||(window.DOMY=o),console.log("DOMY"),a.current.innerHTML=n;const s=i?await i():[];o.createApp(e).configure(l??{}).plugins(s).components(r?.()).mount(a.current)}catch(o){console.error("[Demo] Load error:",o)}})(),()=>{o=!1}}),[p]),p?(0,c.jsx)("div",{className:s,ref:a}):(0,c.jsx)("div",{className:s,children:"Loading..."})}},3922:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var o=t(1085),s=t(1184),c=t(1983);const r={},l="Components",i={id:"essentials/components",title:"Components",description:"Components in DOMY allow you to create reusable UI elements with encapsulated logic. They support props, slots, events, and even functions passed as props to update a parent component's state dynamically.",source:"@site/docs/essentials/components.mdx",sourceDirName:"essentials",slug:"/essentials/components",permalink:"/docs/essentials/components",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Attribute Binding",permalink:"/docs/essentials/binding"},next:{title:"Event Handling",permalink:"/docs/essentials/events"}},a={},p=[{value:"Creating a Basic Component",id:"creating-a-basic-component",level:2},{value:"Example: A Simple Counter Component",id:"example-a-simple-counter-component",level:3},{value:"Get component childrens",id:"get-component-childrens",level:2},{value:"Example",id:"example",level:3},{value:"Lifecycle Hooks in Components",id:"lifecycle-hooks-in-components",level:2},{value:"Example: Using <code>onMounted</code> in a Component",id:"example-using-onmounted-in-a-component",level:3}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"components",children:"Components"}),"\n",(0,o.jsxs)(e.p,{children:["Components in DOMY allow you to create ",(0,o.jsx)(e.strong,{children:"reusable"})," UI elements with encapsulated logic. They support ",(0,o.jsx)(e.strong,{children:"props, slots, events"}),", and even ",(0,o.jsx)(e.strong,{children:"functions"})," passed as props to update a parent component's state dynamically."]}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsx)(e.h2,{id:"creating-a-basic-component",children:"Creating a Basic Component"}),"\n",(0,o.jsxs)(e.p,{children:["A ",(0,o.jsx)(e.strong,{children:"component"})," is defined using ",(0,o.jsx)(e.code,{children:"DOMY.createComponent()"})," and includes:"]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"html"})," \u2192 Template structure."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"props"})," \u2192 Properties passed by the parent."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"app"})," \u2192 Reactive state and logic."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"components"})," \u2192 Components you need to use inside that component."]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"example-a-simple-counter-component",children:"Example: A Simple Counter Component"}),"\n",(0,o.jsxs)(e.p,{children:["NOTE: The ",(0,o.jsx)(e.code,{children:"!"})," mean the prop is required. Also, ensure to use ",(0,o.jsx)(e.code,{children:"kebab case"})," for props attributes on the component."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-html",children:'<Count :count="myCount" :update-count="updateCount"></Count>\n'})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:"const { signal } = DOMY;\n\nconst Count = DOMY.createComponent({\n  props: ['!count', 'updateCount'],\n  html: `\n    <div>\n      <p>Counter: {{ $props.count }}</p>\n      <button d-if=\"$props.updateCount\" @click=\"$props.updateCount\">+</button>\n    </div>\n  `\n});\n\nDOMY.createApp(() => {\n  const myCount = signal(0);\n  const updateCount = () => myCount.value++;\n  return { myCount, updateCount };\n})\n  .components({ Count })\n  .mount();\n"})}),"\n",(0,o.jsx)(c.A,{code:'\n<Count :count="myCount" :update-count="updateCount"></Count>\n',domy:()=>{const{signal:n}=DOMY,e=n(0);return{myCount:e,updateCount:()=>e.value++}},components:()=>({Count:DOMY.createComponent({html:'\n  <div>\n    <p>Counter: {{ $props.count }}</p>\n    <button d-if="$props.updateCount" @click="$props.updateCount">+</button>\n  </div>\n',props:["!count","updateCount"]})})}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsx)(e.h2,{id:"get-component-childrens",children:"Get component childrens"}),"\n",(0,o.jsx)(e.p,{children:"You can access the childrens of the component after they are render by the parent."}),"\n",(0,o.jsx)(e.h3,{id:"example",children:"Example"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-html",children:"<component>\n  <p>{{ message }}</p>\n</component>\n"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:"const Component = DOMY.createComponent({\n  html: `\n    <div :style=\"{ color: 'red' }\">\n      <template d-insert=\"$childrens[0]\"></template>\n    </div>\n  `\n});\n\nDOMY.createApp(() => {\n  return { message: 'Hello World!' };\n})\n  .components({ Components })\n  .mount();\n"})}),"\n",(0,o.jsx)(c.A,{code:"\n  <component>\n<p>{{ message }}</p>\n</component>\n  ",domy:()=>({message:"Hello World!"}),components:()=>({Component:DOMY.createComponent({html:'\n  <div :style="{ color: \'red\' }">\n    <template d-insert="$childrens[0]"></template>\n  </div>\n'})})}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsx)(e.h2,{id:"lifecycle-hooks-in-components",children:"Lifecycle Hooks in Components"}),"\n",(0,o.jsxs)(e.p,{children:["Components support ",(0,o.jsx)(e.strong,{children:"lifecycle hooks"})," for setup and cleanup operations."]}),"\n",(0,o.jsxs)(e.h3,{id:"example-using-onmounted-in-a-component",children:["Example: Using ",(0,o.jsx)(e.code,{children:"onMounted"})," in a Component"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:"const { onMounted } = DOMY;\n\nconst Timer = DOMY.createComponent({\n  html: `<p>Time: {{ time }}</p>`,\n  app: () => {\n    const time = signal(0);\n    let interval;\n\n    onMounted(() => {\n      interval = setInterval(() => time.value++, 1000);\n    });\n\n    onBeforeUnmount(() => {\n      clearInterval(interval);\n    });\n\n    return { time };\n  }\n});\n"})}),"\n",(0,o.jsxs)(e.p,{children:["\ud83d\ude80 ",(0,o.jsx)(e.strong,{children:"This component updates every second and cleans up before unmounting!"})]})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}}}]);