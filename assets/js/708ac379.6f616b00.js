"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5589],{9108:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>a});var l=s(1085),t=s(1184),r=s(1983);const c={},i="$childrens",o={id:"helpers/$childrens",title:"$childrens",description:"The $childrens special helper allows a component to access the elements passed inside its tag.",source:"@site/docs/helpers/$childrens.mdx",sourceDirName:"helpers",slug:"/helpers/$childrens",permalink:"/domy/docs/helpers/$childrens",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"$attrs",permalink:"/domy/docs/helpers/$attrs"},next:{title:"$config",permalink:"/domy/docs/helpers/$config"}},d={},a=[{value:"Syntax",id:"syntax",level:2},{value:"Example",id:"example",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"childrens",children:"$childrens"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"$childrens"})," special helper allows a component to access the elements passed inside its tag.\nThis is useful for handling slots or dynamically rendering child elements within a component."]}),"\n",(0,l.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",children:"<ErrorMessage>\n  <p>Hello</p>\n</ErrorMessage>\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Inside ",(0,l.jsx)(n.code,{children:"ErrorMessage"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"console.log($childrens); // [<p>Hello</p>]\n"})}),"\n",(0,l.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",children:"<component>\n  <p>This element is injected in the component.</p>\n</component>\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'const Component = DOMY.createComponent({\n  html: `<template d-insert="$childrens[0]"></template>`\n});\n'})}),"\n",(0,l.jsx)(r.A,{code:"\n<component>\n  <p>This element is injected in the component.</p>\n</component>\n",components:()=>({Component:DOMY.createComponent({html:'<template d-insert="$childrens[0]"></template>'})})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}}}]);