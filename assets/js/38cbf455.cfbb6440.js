"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[581],{1184:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var t=s(4041);const r={},o=t.createContext(r);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:n},e.children)}},1410:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var t=s(1085),r=s(1184),o=s(1983);const a={},c="useAttrs",i={id:"hooks/useAttrs",title:"useAttrs",description:"The useAttrs hook allows components to access attributes passed from their parent, excluding props. This is useful for forwarding extra attributes like classes, data attributes, and event listeners.",source:"@site/docs/hooks/useAttrs.mdx",sourceDirName:"hooks",slug:"/hooks/useAttrs",permalink:"/docs/hooks/useAttrs",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"nextTick",permalink:"/docs/hooks/nextTick"},next:{title:"useChildrens",permalink:"/docs/hooks/useChildrens"}},l={},d=[{value:"Syntax",id:"syntax",level:2},{value:"Use Case",id:"use-case",level:2},{value:"Example of Attribute Forwarding",id:"example-of-attribute-forwarding",level:3},{value:"Example with Props",id:"example-with-props",level:3}];function p(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"useattrs",children:"useAttrs"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"useAttrs"})," hook allows components to access attributes passed from their parent, excluding ",(0,t.jsx)(n.code,{children:"props"}),". This is useful for forwarding extra attributes like classes, data attributes, and event listeners."]}),"\n",(0,t.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<MyComponent class="red" data-info="example">\n  <p>Hello</p>\n</MyComponent>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Inside ",(0,t.jsx)(n.code,{children:"MyComponent"}),", ",(0,t.jsx)(n.code,{children:"useAttrs()"})," will return:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const attrs = useAttrs();\nconsole.log(attrs); // { class: "red", "data-info": "example" }\n'})}),"\n",(0,t.jsx)(n.h2,{id:"use-case",children:"Use Case"}),"\n",(0,t.jsx)(n.h3,{id:"example-of-attribute-forwarding",children:"Example of Attribute Forwarding"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:"<component :style=\"{ color: 'red' }\">\n  <p>This component inherits passed attributes</p>\n</component>\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const { useAttrs } = DOMY;\n\nconst Component = DOMY.createComponent({\n  html: `\n    <div d-attrs="attrs">\n      <template d-insert="$childrens[0]"></template>\n    </div>\n  `,\n  app: () => {\n    const attrs = useAttrs();\n    return {\n      attrs\n    };\n  }\n});\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"useAttrs()"})," hook will have the value ",(0,t.jsx)(n.code,{children:"{ style: 'color:red' }"}),"."]}),"\n",(0,t.jsx)(o.A,{code:"\n<component :style=\"{ color: 'red' }\">\n  <p>This component inherits passed attributes</p>\n</component>\n",components:()=>{const{useAttrs:e}=DOMY;return{Component:DOMY.createComponent({html:'     <div d-attrs="attrs">\n          <template d-insert="$childrens[0]"></template>\n        </div>\n      ',app:()=>({attrs:e()})})}}}),"\n",(0,t.jsx)(n.h3,{id:"example-with-props",children:"Example with Props"}),"\n",(0,t.jsxs)(n.p,{children:["Let's imagine ",(0,t.jsx)(n.code,{children:"count"})," is a prop of the ",(0,t.jsx)(n.code,{children:"ErrorMessage"})," component:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<ErrorMessage class="warning" :count="5">\n  <p>Error occurred</p>\n</ErrorMessage>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Inside ",(0,t.jsx)(n.code,{children:"ErrorMessage"}),", we will have:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const attrs = useAttrs();\nconsole.log(attrs); // { class: "warning" }\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},1983:(e,n,s)=>{s.d(n,{A:()=>a});var t=s(4041);const r="demo_TaPm";var o=s(1085);const a=({code:e,domy:n,components:a,config:c,plugins:i})=>{const l=(0,t.useRef)(null),[d,p]=(0,t.useState)(!1);return(0,t.useEffect)((()=>{let t=!0;p(!0);return(async()=>{try{if(!l.current||"undefined"==typeof window)return;const{default:t}=await s.e(5228).then(s.t.bind(s,2847,23));window.DOMY||(window.DOMY=t),console.log("DOMY"),l.current.innerHTML=e;const r=i?await i():[];t.createApp(n).configure(c??{}).plugins(r).components(a?.()).mount(l.current)}catch(t){console.error("[Demo] Load error:",t)}})(),()=>{t=!1}}),[d]),d?(0,o.jsx)("div",{className:r,ref:l}):(0,o.jsx)("div",{className:r,children:"Loading..."})}}}]);