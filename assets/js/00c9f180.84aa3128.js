"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3588],{2750:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"helpers/$attrs","title":"$attrs","description":"The $attrs special helper allows components to access attributes passed from their parent, excluding props.","source":"@site/docs/helpers/$attrs.mdx","sourceDirName":"helpers","slug":"/helpers/$attrs","permalink":"/domy/docs/helpers/$attrs","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Helpers","permalink":"/domy/docs/category/helpers"},"next":{"title":"$childrens","permalink":"/domy/docs/helpers/$childrens"}}');var t=n(1085),l=n(1184),a=n(1983);const o={},i="$attrs",c={},d=[{value:"Syntax",id:"syntax",level:2},{value:"Behavior",id:"behavior",level:2},{value:"Use Case",id:"use-case",level:2},{value:"Example of attribute forwarding",id:"example-of-attribute-forwarding",level:3},{value:"Example with props",id:"example-with-props",level:3}];function p(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"attrs",children:"$attrs"})}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"$attrs"})," special helper allows components to access attributes passed from their parent, excluding ",(0,t.jsx)(s.code,{children:"props"}),".\nThis is useful for forwarding extra attributes like classes, data attributes, ..."]}),"\n",(0,t.jsx)(s.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-html",children:'<MyComponent class="red" data-info="example">\n  <p>Hello</p>\n</MyComponent>\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Inside ",(0,t.jsx)(s.code,{children:"MyComponent"}),", ",(0,t.jsx)(s.code,{children:"$attrs"})," will hold:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:'console.log($attrs); // { class: "red", "data-info": "example" }\n'})}),"\n",(0,t.jsx)(s.h2,{id:"behavior",children:"Behavior"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"$attrs"})," contains attributes that are passed to the component but are ",(0,t.jsx)(s.strong,{children:"not"})," defined as props."]}),"\n",(0,t.jsx)(s.li,{children:"Works well for forwarding attributes dynamically."}),"\n",(0,t.jsx)(s.li,{children:"Helps ensure flexibility when wrapping or extending components."}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"use-case",children:"Use Case"}),"\n",(0,t.jsx)(s.h3,{id:"example-of-attribute-forwarding",children:"Example of attribute forwarding"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-html",children:"<component :style=\"{ color: 'red' }\">\n  <p>This component inherits passed attributes</p>\n</component>\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:'const Component = DOMY.createComponent({\n  html: `\n    <div d-attrs="$attrs">\n      <template d-insert="$childrens[0]"></template>\n    </div>\n  `\n});\n'})}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"$attrs"})," helper will have the value ",(0,t.jsx)(s.code,{children:"{ style: 'color:red' }"}),"."]}),"\n",(0,t.jsx)(a.A,{code:"\n<component :style=\"{ color: 'red' }\">\n  <p>This component inherits passed attributes</p>\n</component>\n",components:()=>({Component:DOMY.createComponent({html:'\n  <div d-attrs="$attrs">\n    <template d-insert="$childrens[0]"></template>\n  </div>\n'})})}),"\n",(0,t.jsx)(s.h3,{id:"example-with-props",children:"Example with props"}),"\n",(0,t.jsxs)(s.p,{children:["Let's imagine ",(0,t.jsx)(s.code,{children:"count"})," is a prop of ",(0,t.jsx)(s.code,{children:"ErrorMessage"})," component:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-html",children:'<ErrorMessage class="warning" :count="5">\n  <p>Error occurred</p>\n</ErrorMessage>\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Inside ",(0,t.jsx)(s.code,{children:"ErrorMessage"})," we will have:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:'console.log($attrs); // { class: "warning" }\n'})})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);