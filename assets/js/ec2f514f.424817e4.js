"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8539],{1184:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var t=s(4041);const o={},a=t.createContext(o);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(a.Provider,{value:n},e.children)}},1983:(e,n,s)=>{s.d(n,{A:()=>i});var t=s(4041);const o="demo_TaPm";var a=s(1085);const i=({code:e,domy:n,components:i,config:c,plugins:r})=>{const d=(0,t.useRef)(null),[l,m]=(0,t.useState)(!1);return(0,t.useEffect)((()=>{let t=!0;m(!0);return(async()=>{try{if(!d.current||"undefined"==typeof window)return;const{default:t}=await s.e(5228).then(s.t.bind(s,2847,23));window.DOMY||(window.DOMY=t),console.log("DOMY"),d.current.innerHTML=e;const o=r?await r():[];t.createApp(n).configure(c??{}).plugins(o).components(i?.()).mount(d.current)}catch(t){console.error("[Demo] Load error:",t)}})(),()=>{t=!1}}),[l]),l?(0,a.jsx)("div",{className:o,ref:d}):(0,a.jsx)("div",{className:o,children:"Loading..."})}},7846:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var t=s(1085),o=s(1184),a=s(1983);const i={},c="useNames",r={id:"hooks/useNames",title:"useNames",description:"The useNames hook allows a component to access registered child elements that have been assigned a specific name using the d-name directive. This is useful for managing named slots or dynamically manipulating specific child elements within a component.",source:"@site/docs/hooks/useNames.mdx",sourceDirName:"hooks",slug:"/hooks/useNames",permalink:"/domy/docs/hooks/useNames",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useConfig",permalink:"/domy/docs/hooks/useConfig"},next:{title:"useProps",permalink:"/domy/docs/hooks/useProps"}},d={},l=[{value:"Syntax",id:"syntax",level:2},{value:"Example",id:"example",level:2},{value:"Injecting Named Child Elements",id:"injecting-named-child-elements",level:3}];function m(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"usenames",children:"useNames"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"useNames"})," hook allows a component to access registered child elements that have been assigned a specific name using the ",(0,t.jsx)(n.code,{children:"d-name"})," directive. This is useful for managing named slots or dynamically manipulating specific child elements within a component."]}),"\n",(0,t.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<ErrorMessage>\n  <p d-name="example">Hello</p>\n</ErrorMessage>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Inside ",(0,t.jsx)(n.code,{children:"ErrorMessage"}),", ",(0,t.jsx)(n.code,{children:"useNames()"})," will return:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const names = useNames();\nconsole.log(names['example']); // [<p>Hello</p>]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.h3,{id:"injecting-named-child-elements",children:"Injecting Named Child Elements"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<component>\n  <p d-name="header">This header is injected into the component.</p>\n  <p d-name="footer">This footer is injected into the component.</p>\n</component>\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const { useNames } = DOMY;\n\nconst Component = DOMY.createComponent({\n  html: `\n    <div>\n        <template d-insert=\"names['header']\"></template>\n        <div>Main content</div>\n        <template d-insert=\"names['footer']\"></template>\n    </div>\n  `,\n  app: () => {\n    const names = useNames();\n    return {\n      names\n    };\n  }\n});\n"})}),"\n",(0,t.jsx)(a.A,{code:'\n<component>\n  <p d-name="header">This header is injected into the component.</p>\n  <p d-name="footer">This footer is injected into the component.</p>\n</component>\n',components:()=>{const{useNames:e}=DOMY;return{Component:DOMY.createComponent({html:"\n    <div>\n          <template d-insert=\"names['header']\"></template>\n          <div>Main content</div>\n          <template d-insert=\"names['footer']\"></template>\n    </div>\n    ",app:()=>({names:e()})})}}})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}}}]);