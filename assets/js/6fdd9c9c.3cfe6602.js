"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8231],{7230:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"directives/d-scope","title":"d-scope","description":"The d-scope directive in DOMY allows you to create a reactive data object that is scoped to the current DOM element and its children. This scoped reactivity means variables defined here will only be available within the specific subtree.","source":"@site/docs/directives/d-scope.mdx","sourceDirName":"directives","slug":"/directives/d-scope","permalink":"/domy/docs/directives/d-scope","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"d-ref","permalink":"/domy/docs/directives/d-ref"},"next":{"title":"d-setup","permalink":"/domy/docs/directives/d-setup"}}');var n=s(1085),c=s(1184),d=s(1983);const o={},r="d-scope",a={},l=[{value:"Syntax",id:"syntax",level:2},{value:"Example",id:"example",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"d-scope",children:"d-scope"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"d-scope"})," directive in DOMY allows you to ",(0,n.jsx)(t.strong,{children:"create a reactive data object"})," that is scoped to the current DOM element and its children. This scoped reactivity means variables defined here will only be available within the specific subtree."]}),"\n",(0,n.jsx)(t.p,{children:"This is useful for isolating state in a portion of the DOM without polluting the global state."}),"\n",(0,n.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-html",children:'<div d-scope="{ count: 0 }">\n  <button @click="count++">+</button>\n  <span>{{ count }}</span>\n</div>\n'})}),"\n",(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(d.A,{code:'\n  <div d-scope="{ count: 0 }">\n    <button @click="count++">+</button>\n    <span>{{ count }}</span>\n  </div>\n'})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);