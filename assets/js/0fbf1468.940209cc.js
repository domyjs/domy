(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[436],{1184:(e,t,n)=>{"use strict";n.d(t,{R:()=>c,x:()=>l});var s=n(4041);const i={},r=s.createContext(i);function c(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(r.Provider,{value:t},e.children)}},7374:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>g,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var s=n(1085),i=n(1184);n(7818);const r={},c="Intersect",l={id:"plugins/intersect",title:"Intersect",description:"The d-intersect directive/prefix allows you to trigger an action when an element appears in the viewport, making it perfect for lazy loading, animations, or analytics tracking.",source:"@site/docs/plugins/intersect.mdx",sourceDirName:"plugins",slug:"/plugins/intersect",permalink:"/docs/plugins/intersect",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Internationalization (i18n)",permalink:"/docs/plugins/i18n"},next:{title:"Mask",permalink:"/docs/plugins/mask"}},a={},o=[{value:"Installation",id:"installation",level:2},{value:"Syntax and Usage",id:"syntax-and-usage",level:2},{value:"<strong>Basic Intersect Usage</strong>",id:"basic-intersect-usage",level:3},{value:"<strong>Unintersect Usage</strong>",id:"unintersect-usage",level:3},{value:"<strong>Using Custom Settings (<code>d-intersect-settings</code>)</strong>",id:"using-custom-settings-d-intersect-settings",level:2},{value:"Example: Lazy Loading Images",id:"example-lazy-loading-images",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"intersect",children:"Intersect"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"d-intersect"})," directive/prefix allows you to ",(0,s.jsx)(t.strong,{children:"trigger an action when an element appears in the viewport"}),", making it perfect for ",(0,s.jsx)(t.strong,{children:"lazy loading, animations, or analytics tracking"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(t.p,{children:["To use ",(0,s.jsx)(t.code,{children:"d-intersect"}),", include the DOMY Intersect plugin via CDN:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",children:'<script src="https://unpkg.com/@domyjs/intersect@1.x.x"><\/script>\n'})}),"\n",(0,s.jsx)(t.p,{children:"And then:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"DOMY.createApp()\n  .plugins([\n    intersect({ rootMargin: '30px' }) // Set your own global settings for the IntersectionObserver\n  ])\n  .mount();\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"syntax-and-usage",children:"Syntax and Usage"}),"\n",(0,s.jsx)(t.h3,{id:"basic-intersect-usage",children:(0,s.jsx)(t.strong,{children:"Basic Intersect Usage"})}),"\n",(0,s.jsx)(t.p,{children:"Triggers an action when the element enters the viewport."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",children:'<div d-intersect="loadContent">Content appears when visible</div>\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"const loadContent = () => console.log('Element is visible!');\n"})}),"\n",(0,s.jsx)(t.h3,{id:"unintersect-usage",children:(0,s.jsx)(t.strong,{children:"Unintersect Usage"})}),"\n",(0,s.jsx)(t.p,{children:"Triggers an action when the element leaves the viewport."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",children:'<div d-unintersect="hideContent">Content disappears when scrolled away</div>\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"const hideContent = () => console.log('Element left viewport!');\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"using-custom-settings-d-intersect-settings",children:(0,s.jsxs)(t.strong,{children:["Using Custom Settings (",(0,s.jsx)(t.code,{children:"d-intersect-settings"}),")"]})}),"\n",(0,s.jsxs)(t.p,{children:["Modify the intersection behavior using ",(0,s.jsx)(t.strong,{children:"threshold and root margins"}),". Ensure it's placed before ",(0,s.jsx)(t.code,{children:"d-intersect"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",children:'<div\n  d-intersect-settings="{ threshold: 0.5, rootMargin: \'0px 0px -100px 0px\' }"\n  d-intersect="animateElement"\n>\n  Custom intersection settings applied\n</div>\n'})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"example-lazy-loading-images",children:"Example: Lazy Loading Images"}),"\n",(0,s.jsxs)(t.p,{children:["Only loads an image when it ",(0,s.jsx)(t.strong,{children:"appears in the viewport"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",children:'<img d-intersect:src="image.jpg" alt="Lazy-loaded image" />\n'})})]})}function g(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},7818:function(e){e.exports=function(){"use strict";class e{constructor(e){this.elements=new Map,this.obs=new IntersectionObserver(this.callback.bind(this),e)}callback(...e){const[t]=e;for(const n of t){const e=this.elements.get(n.target);e&&(n.isIntersecting&&!e.wasIntersecting?(e.wasIntersecting=!0,e.action(!0)):e.wasIntersecting&&(e.action(!1),e.wasIntersecting=!1))}}observe(e,t){let n=e.el;e.onElementChange((e=>{const t=this.elements.get(n);this.elements.delete(n),this.obs.unobserve(n),this.elements.set(e,t),n=e})),this.elements.set(n,{wasIntersecting:!1,action:t}),this.obs.observe(n)}unobserve(e){this.elements.delete(e.el),this.obs.unobserve(e.el)}disconnect(){this.obs.disconnect()}}class t{constructor(t){this.globalIntersectionObserver=new e(t)}intersectSettingsPlugin(e){if(!e.block.el.getAttribute("d-intersect")&&!e.block.el.getAttribute("d-unintersect"))throw new Error('(Intersect) The "d-intersect" or "d-unintersect" directive as to be placed after "d-intersect-settings" directive (and not before).');e.block.setDataForPluginId("intersect-settings",e.evaluate(e.attr.value))}intersectPlugin(t){var n;const s=null!==(n=t.block.getDataForPluginId("intersect-settings"))&&void 0!==n?n:{},i="d-intersect"===t.attrName||"intersect"===t.prefix,r="intersect"===t.prefix||"unintersect"===t.prefix;let c=null,l=null;const a=e=>{var n;const s=e&&i,a=!e&&!i;if(r){if(i&&!e||!i&&e)return null==l||l(),void(null==c||c());if(!s&&!a)return;const r="class"===t.attrName,o="style"===t.attrName;c=null!==(n=t.effect((()=>{const e=t.block.el,n=t.evaluate(t.attr.value);if(r){const s=t.utils.handleClass(n,e.className);l=()=>e.className=s.cleanedClass(e.className),e.className=s.class}else if(o){const s=t.utils.handleStyle(n,e.style.cssText);l=()=>e.setAttribute(t.attrName,s.cleanedStyle(e.style.cssText)),e.setAttribute(t.attrName,s.style)}else l=()=>e.removeAttribute(t.attrName),e.setAttribute(t.attrName,n)})))&&void 0!==n?n:null}else(s||a)&&t.evaluate(t.attr.value)};if(s){const n=new e(s);n.observe(t.block,a),t.cleanup((()=>n.disconnect()))}else this.globalIntersectionObserver.observe(t.block,a),t.cleanup((()=>this.globalIntersectionObserver.unobserve(t.block)))}}return e=>{const n=new t(e),s=n.intersectPlugin.bind(n);return e=>{e.directive("intersect-settings",n.intersectSettingsPlugin.bind(n)),e.prefix("intersect",s),e.prefix("unintersect",s),e.directive("intersect",s),e.directive("unintersect",s)}}}()}}]);