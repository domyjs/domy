"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9155],{1184:(n,e,t)=>{t.d(e,{R:()=>i,x:()=>s});var o=t(4041);const c={},r=o.createContext(c);function i(n){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:i(n.components),o.createElement(r.Provider,{value:e},n.children)}},1983:(n,e,t)=>{t.d(e,{A:()=>i});var o=t(4041);const c="demo_TaPm";var r=t(1085);const i=({code:n,domy:e,components:i,config:s,plugins:a})=>{const l=(0,o.useRef)(null),[u,d]=(0,o.useState)(!1);return(0,o.useEffect)((()=>{let o=!0;d(!0);return(async()=>{try{if(!l.current||"undefined"==typeof window)return;const{default:o}=await t.e(5228).then(t.t.bind(t,2847,23));window.DOMY||(window.DOMY=o),console.log("DOMY"),l.current.innerHTML=n;const c=a?await a():[];o.createApp(e).configure(s??{}).plugins(c).components(i?.()).mount(l.current)}catch(o){console.error("[Demo] Load error:",o)}})(),()=>{o=!1}}),[u]),u?(0,r.jsx)("div",{className:c,ref:l}):(0,r.jsx)("div",{className:c,children:"Loading..."})}},4483:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>u});var o=t(1085),c=t(1184),r=t(1983);const i={},s="Content Security Policy (CSP)",a={id:"config/CSP",title:"Content Security Policy (CSP)",description:"Content Security Policy (CSP) is a security feature that helps prevent cross-site scripting (XSS) and other code injection attacks by controlling the sources from which scripts, styles, and other resources are loaded.",source:"@site/docs/config/CSP.mdx",sourceDirName:"config",slug:"/config/CSP",permalink:"/domy/docs/config/CSP",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Config",permalink:"/domy/docs/category/config"},next:{title:"Avoid Deprecated With",permalink:"/domy/docs/config/avoidDeprecatedWith"}},l={},u=[{value:"Configuration in DOMY",id:"configuration-in-domy",level:2},{value:"Example",id:"example",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"content-security-policy-csp",children:"Content Security Policy (CSP)"}),"\n",(0,o.jsx)(e.p,{children:"Content Security Policy (CSP) is a security feature that helps prevent cross-site scripting (XSS) and other code injection attacks by controlling the sources from which scripts, styles, and other resources are loaded."}),"\n",(0,o.jsx)(e.h2,{id:"configuration-in-domy",children:"Configuration in DOMY"}),"\n",(0,o.jsx)(e.p,{children:"DOMY provides a CSP mode that allows applications to work securely while enforcing strict script execution rules. To enable CSP in DOMY, you can configure it as follows:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:"DOMY.createApp(() => {\n  return {\n    message: 'Secure Mode Enabled'\n  };\n})\n  .configure({\n    CSP: true\n  })\n  .mount();\n"})}),"\n",(0,o.jsx)(e.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="fr">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <meta\n      http-equiv="Content-Security-Policy"\n      content="default-src \'self\'; script-src \'nonce-abc123\'"\n    />\n    <title>CSP with DOMY</title>\n    <script nonce="abc123" src="https://unpkg.com/@domyjs/core@1.x.x"><\/script>\n  </head>\n  <body>\n    <h1>{{ greeting.msg }}</h1>\n\n    <p>Count: {{ count }}</p>\n    <p>Odd: {{ isOdd() }}</p>\n\n    <button @click="increment">+</button>\n    <button @click="decrement">-</button>\n  </body>\n  <script nonce="abc123">\n    const { signal, watch } = DOMY;\n\n    DOMY.createApp(() => {\n      const greeting = signal({ msg: \'Hello World!\' });\n      const count = signal(0);\n\n      watch(\n        ({ prevValue, newValue }) => {\n          if (newValue < 0) count.value = prevValue;\n        },\n        () => count\n      );\n\n      return {\n        count,\n        greeting,\n        isOdd: () => count.value % 2 === 1,\n        increment: () => count.value++,\n        decrement: () => count.value--\n      };\n    })\n      .configure({\n        CSP: true\n      })\n      .mount();\n  <\/script>\n</html>\n'})}),"\n",(0,o.jsx)(r.A,{config:{CSP:!0},code:'\n\n<h1>{{ greeting.msg }}</h1>\n\n  <p>Cound: {{ count }}</p>\n  <p>Odd: {{ isOdd() }}</p>\n\n  <button @click="increment">+</button>\n  <button @click="decrement">-</button>\n\n',domy:()=>{const{signal:n,watch:e}=DOMY,t=n({msg:"Hello World!"}),o=n(0);return e((({prevValue:n,newValue:e})=>{e<0&&(o.value=n)}),(()=>o)),{count:o,greeting:t,isOdd:()=>o.value%2==1,increment:()=>o.value++,decrement:()=>o.value--}}})]})}function p(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}}}]);